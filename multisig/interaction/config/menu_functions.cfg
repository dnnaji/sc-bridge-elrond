#!/bin/bash
set -e

source $SCRIPTPATH/config/aggregator-snippets.sh
source $SCRIPTPATH/config/issue-tokens-snippets.sh
source $SCRIPTPATH/config/multisig-snippets.sh
source $SCRIPTPATH/config/multitransfer-snippets.sh
source $SCRIPTPATH/config/relayers-snippets.sh
source $SCRIPTPATH/config/upgrade-snippets.sh
source $SCRIPTPATH/config/wrapped-snippets.sh

function confirmation {
  FUNC="$1"
  echo -e 
  read -p "Do you want to go on with ${GREEN}"${FUNC}"${NC} (Default No) ? (Yy/Nn)" yn
  echo -e
  
  case $yn in
      [Yy]* )
      
      echo -e "${GREEN}Proceeding with "${FUNC}"!${NC}"
      ${FUNC}
        ;;
      [Nn]* )
      echo -e "${GREEN}Exiting...${NC}"
        ;;
            
      * )
      echo -e "${GREEN}I'll take that as a no then... ${NC}"
        ;;
  esac
}

function confirmation-with-skip {
  FUNC="$1"
  echo -e 
  read -p "Do you want to go on with "${FUNC}" (Default Yes) ? (Yy/Nn)" yn
  echo -e
  
  case $yn in
      [Yy]* )
      
      echo -e "${GREEN}Proceeding with "${FUNC}"!${NC}"
      ${FUNC}
        ;;
      [Nn]* )
        ;;
            
      * )
      echo -e "${GREEN}I'll take that as a no then... ${NC}"
        ;;
  esac
}

function continue-confirmation {
  FUNC="$1"
  echo -e 
  read -p "Enter any key to continue with "${FUNC}"" yn
  echo -e
  
  ${FUNC}
}

function manual-update-config-file {
  source $SCRIPTPATH/config/configs.cfg
}

function update-config {
  TARGET_KEY=$1
  REPLACEMENT_VALUE=$2
  sed "s/^$TARGET_KEY=.*/$TARGET_KEY=$REPLACEMENT_VALUE/" $CONFIG_FILE > $SCRIPTPATH/config/temp.x
  mv $SCRIPTPATH/config/temp.x "$CONFIG_FILE"
  source $CONFIG_FILE
}

function deploy-aggregator {
  deployAggregator
  update-config AGGREGATOR ${ADDRESS}
  confirmation-with-skip submitAggregatorBatch

  echo -e 
  echo "Aggregator deployed!"
  echo -e 
}

function deploy-wrapper {
  deployBridgedTokensWrapper
  update-config BRIDGED_TOKENS_WRAPPER ${ADDRESS}
}

function deploy-bridge-contracts {
  deploySafe
  update-config SAFE ${ADDRESS}
  confirmation-with-skip deployMultiTransfer
  update-config MULTI_TRANSFER ${ADDRESS}
  confirmation-with-skip deployMultisig
  update-config MULTI_TRANSFER ${ADDRESS}
  confirmation-with-skip changeChildContractsOwnership
}

function whitelist-token {
  echo -e 
  echo "PREREQUIREMENTS: BRIDGED_TOKENS_WRAPPER needs to have MINT+BURN role for the UNIVERSAL TOKEN"
  echo "Check and update TOKENS SETTINGS section in configs.cfg"
  echo -e
  confirmation-with-skip manual-update-config-file

  confirmation-with-skip issueUniversalToken
  confirmation-with-skip setLocalRolesBridgedTokensWrapper
  confirmation-with-skip issueChainSpecificToken

  echo -e 
  echo "Update TOKENS TO BE WHITELISTED section in configs.cfg with the SC"
  echo -e
  confirmation-with-skip manual-update-config-file

  confirmation-with-skip transferToSC
  confirmation-with-skip addWrappedToken
  confirmation-with-skip wrapper-whitelistToken
  confirmation-with-skip setLocalRolesEsdtSafe
  confirmation-with-skip setLocalRolesMultiTransferEsdt
  confirmation-with-skip addMapping
  confirmation-with-skip addTokenToWhitelist
}

function change-quorum {
  read -p "Quorum: " QUORUM
  update-config QUORUM ${QUORUM}
  changeQuorum
}

function set-safe-max-tx {
  read -p "New batch size: " BATCH_SIZE
  update-config MAX_TX_PER_BATCH ${BATCH_SIZE}
  esdtSafeSetMaxTxBatchSize
}

function set-safe-batch-block-duration {
  read -p "New batch block duration: " BLOCK_DURATION
  update-config MAX_TX_BLOCK_DURATION_PER_BATCH ${BLOCK_DURATION}
  esdtSafeSetMaxTxBatchBlockDuration
}

function pause-contracts {
  confirmation-with-skip pause
  confirmation-with-skip pauseEsdtSafe
}

function unpause-contracts {
  confirmation-with-skip unpause
  confirmation-with-skip unpauseEsdtSafe
}